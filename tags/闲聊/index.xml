<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>闲聊 on Maerlyn's Rainbow</title><link>https://wizmann.top/tags/%E9%97%B2%E8%81%8A/</link><description>Recent content in 闲聊 on Maerlyn's Rainbow</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 04 Jan 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://wizmann.top/tags/%E9%97%B2%E8%81%8A/index.xml" rel="self" type="application/rss+xml"/><item><title>在WSL中获取Windows剪贴板中的图片</title><link>https://wizmann.top/posts/get-image-from-clipboard-in-wsl.md/</link><pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate><guid>https://wizmann.top/posts/get-image-from-clipboard-in-wsl.md/</guid><description>&lt;h2 id="背景">背景 &lt;a href="#%e8%83%8c%e6%99%af" class="anchor">🔗&lt;/a>&lt;/h2>&lt;p>Win10里面的WSL（Windows Subsystem For Linux)算是一个开发神器了，虽然功能不是100%完善，但是对于轻度开发已经足够了。现在我的日常开发，就是一个全屏CMD跑内部工具，一个全屏WSL跑tmux+vim。&lt;/p>
&lt;p>（跑题了）&lt;/p>
&lt;h2 id="问题">问题 &lt;a href="#%e9%97%ae%e9%a2%98" class="anchor">🔗&lt;/a>&lt;/h2>&lt;p>之前的文章里，我有写到使用github做为图床，并且使用python脚本进行图片上传。但是仍有一点问题，就是之前的脚本只能上传文件，不能直接上传剪贴板里的图片。&lt;/p>
&lt;h2 id="解决">解决 &lt;a href="#%e8%a7%a3%e5%86%b3" class="anchor">🔗&lt;/a>&lt;/h2>&lt;p>发现Windows里面有内置的访问剪贴板工具，但是只在powershell下可用。不过我们可以在WSL里直接调用exe文件（这点非常神奇），然后读出图片文件放入临时文件夹。然后我们再读出这个文件进行上传。&lt;/p>
&lt;p>总的流程仍然是上传已有的图片文件，但是我们把它放在临时文件夹并隐藏了起来。看起来就是实现了WSL和Windows剪贴板的互操作。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TMP&lt;span style="color:#f92672">=&lt;/span>/mnt/c/Users/me/AppData/Local/Temp/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TMPWIN&lt;span style="color:#f92672">=&lt;/span>C:&lt;span style="color:#ae81ff">\\&lt;/span>Users&lt;span style="color:#ae81ff">\\&lt;/span>me&lt;span style="color:#ae81ff">\\&lt;/span>AppData&lt;span style="color:#ae81ff">\\&lt;/span>Local&lt;span style="color:#ae81ff">\\&lt;/span>Temp&lt;span style="color:#ae81ff">\\&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ts&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>date +&lt;span style="color:#e6db74">&amp;#34;%Y-%m-%d_%H-%M-%S&amp;#34;&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;(Get-Clipboard -Format Image).Save(\&amp;#34;&lt;/span>$TMPWIN&lt;span style="color:#e6db74">\\&lt;/span>$ts&lt;span style="color:#e6db74">.png\&amp;#34;)&amp;#34;&lt;/span> | /mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe &amp;amp;&amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $? -ne &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;no image in clipboard&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> python upload.py $TMP/$ts.png
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>七牛云图床自救指南（附github图床小工具）</title><link>https://wizmann.top/posts/qnsaver/</link><pubDate>Fri, 16 Nov 2018 22:23:00 +0000</pubDate><guid>https://wizmann.top/posts/qnsaver/</guid><description>&lt;h2 id="背景">背景 &lt;a href="#%e8%83%8c%e6%99%af" class="anchor">🔗&lt;/a>&lt;/h2>&lt;p>之前一直在用七牛云的存储做图床（简称白嫖）。但是免费的午餐必然不会长久，七牛要求所有bucket都要绑定备案过的域名，否则就停掉你的bucket的外链。这事我也不吐槽，毕竟是白嫖，也不能要求啥。&lt;/p>
&lt;p>但是最智障的是，你外链停了没关系，但是我在后台portal查看文件，上面的图还是显示不了，点下载也没有反应，只显示“ [5402] 获取 bucket 域名失败”。说好不嫖了，你却又不让我走了，都没办法数据迁移的。&lt;/p>
&lt;p>因为博客里的图全都存在了七牛的图床上，这么一波搞下来就非常伤。于是我积极展开自救行动。&lt;/p>
&lt;h2 id="大侦探毛利小五郎">大侦探毛利小五郎 &lt;a href="#%e5%a4%a7%e4%be%a6%e6%8e%a2%e6%af%9b%e5%88%a9%e5%b0%8f%e4%ba%94%e9%83%8e" class="anchor">🔗&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>我：你看我们天天查问题，像不像柯南在查案子？ &lt;br>
同事：我觉得我们更像毛利小五郎。&lt;/p>&lt;/blockquote>
&lt;p>大胆猜测七牛的portal也是使用了外链的URL，如果不绑域名的话，是没有文件的URL的。但是我手里又没有备案后的域名。事情就陷入了僵局。&lt;/p>
&lt;p>七牛提供了小工具（qrsctl）让我们管理文件，我觉得这可能是个突破点，万一小工具可以把数据下载下来呢？结果也是不行，这就非常GG了。&lt;/p>
&lt;p>此时，我又发现小工具有拷贝数据的功能，可以把跨bucket拷贝数据，但是我的所有的bucket都没有绑域名。也并不能解决问题。&lt;/p>
&lt;p>我突然又想到，七牛云其实并没有完全禁止外链。对于一个全新的bucket，七牛会免费提供30天的测试域名，所以新的bucket是可以进行文件下载的。&lt;/p>
&lt;p>这样问题就解决了，我新建一个bucket，挂上测试域名，然后把文件都下载下来。这样数据就保住了。&lt;/p>
&lt;h2 id="一波自信操作">一波自信操作 &lt;a href="#%e4%b8%80%e6%b3%a2%e8%87%aa%e4%bf%a1%e6%93%8d%e4%bd%9c" class="anchor">🔗&lt;/a>&lt;/h2>&lt;p>首先我们先从portal上获取ak和sk。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wizmann/assets/master/wizmann-pic/18-11-16/20181116221134.png" alt="">&lt;/p>
&lt;p>然后使用qrsctl，登录，并获取bucket下面的所有文件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./qshell_linux_x64 account &lt;span style="color:#f92672">{&lt;/span>ak&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">{&lt;/span>sk&lt;span style="color:#f92672">}&lt;/span> youname@example.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./qshell_linux_x64 listbucket &lt;span style="color:#f92672">{&lt;/span> bucket_name &lt;span style="color:#f92672">}&lt;/span> | awk -F&lt;span style="color:#e6db74">&amp;#34;\t&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{print $1}&amp;#39;&lt;/span> &amp;gt; files.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接下来把文件拷贝到新的bucket下面。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./qshell_linux_x64 batchcopy &lt;span style="color:#f92672">{&lt;/span> bucket_name &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">{&lt;/span> new_bucket_name &lt;span style="color:#f92672">}&lt;/span> -i files.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此时需要登录portal，获取新的bucket的测试域名。然后填入下载配置文件中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;dest_dir&amp;#34;&lt;/span> : &lt;span style="color:#e6db74">&amp;#34;./dest_dir&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;bucket&amp;#34;&lt;/span> : &lt;span style="color:#e6db74">&amp;#34;{ new_bucket_name }&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;cdn_domain&amp;#34;&lt;/span> : &lt;span style="color:#e6db74">&amp;#34;{ your_test_domain.clouddn.com }&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;prefix&amp;#34;&lt;/span> : &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;suffixes&amp;#34;&lt;/span> : &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后把文件统统下载下来，大功告成。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./qshell_linux_x64 qdownload qdisk_down.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="附录使用github做图床">附录：使用Github做图床 &lt;a href="#%e9%99%84%e5%bd%95%e4%bd%bf%e7%94%a8github%e5%81%9a%e5%9b%be%e5%ba%8a" class="anchor">🔗&lt;/a>&lt;/h2>&lt;p>Github的Blob文件都是存在S3的，墙外性能还是可以的。对于博客这种轻量使用场景已经足够用了，而且重要的是Github不会搞个智障操作强行锁你数据。&lt;/p>
&lt;p>第一步我们需要申请一个&amp;quot;Personal access token&amp;quot;.&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wizmann/assets/master/wizmann-pic/18-11-19/WeChat%20Screenshot_20181119143629.png" alt="">&lt;/p>
&lt;p>然后允许这个token操纵我们的公开repos。注意，这个token非常重要，请不要泄露！&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wizmann/assets/master/wizmann-pic/18-11-19/WeChat%20Screenshot_20181119143932.png" alt="">&lt;/p>
&lt;p>最后我们可以使用这段代码上传图片（或者其它文件）了：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#coding=utf-8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> base64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> requests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> datetime
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fn &lt;span style="color:#f92672">=&lt;/span> sys&lt;span style="color:#f92672">.&lt;/span>argv[&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(fn, &lt;span style="color:#e6db74">&amp;#39;rb&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content &lt;span style="color:#f92672">=&lt;/span> base64&lt;span style="color:#f92672">.&lt;/span>b64encode(f&lt;span style="color:#f92672">.&lt;/span>read())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> prefix &lt;span style="color:#f92672">=&lt;/span> datetime&lt;span style="color:#f92672">.&lt;/span>datetime&lt;span style="color:#f92672">.&lt;/span>now()&lt;span style="color:#f92672">.&lt;/span>strftime(&lt;span style="color:#e6db74">&amp;#34;%y-%m-&lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> upload_name &lt;span style="color:#f92672">=&lt;/span> fn&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span>)[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#f92672">=&lt;/span> requests&lt;span style="color:#f92672">.&lt;/span>put(&lt;span style="color:#e6db74">&amp;#39;https://api.github.com/repos/{{ your_id }}/{{ your_repo }}/contents/{{ path_in_repo }}/&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> prefix &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> upload_name,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers &lt;span style="color:#f92672">=&lt;/span> { &lt;span style="color:#e6db74">&amp;#34;Authorization&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;token {{ your_token }}&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data &lt;span style="color:#f92672">=&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>dumps({ &lt;span style="color:#e6db74">&amp;#39;message&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;upload data&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;content&amp;#39;&lt;/span>: content, &lt;span style="color:#e6db74">&amp;#39;branch&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;master&amp;#39;&lt;/span> }))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info &lt;span style="color:#f92672">=&lt;/span> r&lt;span style="color:#f92672">.&lt;/span>json()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#e6db74">&amp;#39;content&amp;#39;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> info:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print info[&lt;span style="color:#e6db74">&amp;#39;content&amp;#39;&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;download_url&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Hello World</title><link>https://wizmann.top/posts/hello-world/</link><pubDate>Sun, 24 Nov 2013 00:00:00 +0000</pubDate><guid>https://wizmann.top/posts/hello-world/</guid><description>&lt;p>打算把博客迁到这里来了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>print &lt;span style="color:#e6db74">&amp;#39;Hello World&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>