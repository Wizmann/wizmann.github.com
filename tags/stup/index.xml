<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>STUP on Maerlyn's Rainbow</title><link>https://wizmann.top/tags/stup/</link><description>Recent content in STUP on Maerlyn's Rainbow</description><generator>Hugo -- 0.146.0</generator><language>zh-CN</language><lastBuildDate>Mon, 08 May 2017 22:15:58 +0000</lastBuildDate><atom:link href="https://wizmann.top/tags/stup/index.xml" rel="self" type="application/rss+xml"/><item><title>STUP - the Implementation (3)</title><link>https://wizmann.top/posts/stup-3/</link><pubDate>Mon, 08 May 2017 22:15:58 +0000</pubDate><guid>https://wizmann.top/posts/stup-3/</guid><description>&lt;h2 id="throughput-and-window-size">throughput and window size&lt;/h2>
&lt;p>The wisdom of STUP protocol is all about the window size. The throughput of a TCP communication is limited by two windows: the congestion window and the receive window. The congestion window can determine how many bytes that can be send a simple piece of time, and the receive window indicates the capacity of the receiver to process data.&lt;/p>
&lt;p>Both windows influence the throughput of our connection. As the size of receive window is already set after 3-way handshake process, the congestion window is the critical influence. But why?&lt;/p></description></item><item><title>STUP - Packet Structure and State Machine (2)</title><link>https://wizmann.top/posts/stup-2/</link><pubDate>Thu, 04 May 2017 00:53:03 +0000</pubDate><guid>https://wizmann.top/posts/stup-2/</guid><description>&lt;h2 id="stup-packet-structure">STUP Packet Structure&lt;/h2>
&lt;h3 id="brief-introduction-of-tcp--udp-packet-structure">Brief Introduction of TCP &amp;amp; UDP Packet Structure&lt;/h3>
&lt;p>&lt;img loading="lazy" src="https://github.com/Wizmann/assets/raw/master/wizmann-pic/17-4-24/73808256-file_1493006773118_a335.png">&lt;/p>
&lt;p>STUP pretend itself as a protocol at the Transmission Layer, but actually it&amp;rsquo;s absolutely an Application Layer protocol. So before we start, I&amp;rsquo;d like to recall some knowledge of two important Transmission Layer protocol: TCP &amp;amp; UDP.&lt;/p>
&lt;p>It is well known that TCP is a &amp;ldquo;connection-oriented&amp;rdquo;, &amp;ldquo;reliable&amp;rdquo;, &amp;ldquo;ordered&amp;rdquo;. To make an analogy (a little bit inappropriate), TCP is like a phone call (good cell signal strength):&lt;/p></description></item><item><title>STUP - another (stupid) TCP over UDP protocol (1)</title><link>https://wizmann.top/posts/stup-1/</link><pubDate>Thu, 20 Apr 2017 23:17:45 +0000</pubDate><guid>https://wizmann.top/posts/stup-1/</guid><description>&lt;h2 id="what-is-stup">What is STUP?&lt;/h2>
&lt;p>STUP is the abbreviation of &amp;ldquo;Speeded/Secure Tcp-like Udp Protocol&amp;rdquo;, which means that it&amp;rsquo;s another TCP over UDP protocol.&lt;/p>
&lt;p>Why TCP over UDP?&lt;/p>
&lt;p>TCP is a network protocol for general purpose, and it&amp;rsquo;s one of the most commonly used internet protocol on this planet. It is reliable, ordered and well optimized with decades of efforts.&lt;/p>
&lt;p>But, there&amp;rsquo;s plenty of reasons to replace that protocol for my scenario.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;del>Firstly, create my own network protocol is something geeky-nerdy, yep, suits me perfectly.&lt;/del>&lt;/p></description></item></channel></rss>