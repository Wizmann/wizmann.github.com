<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Metaprogramming on Maerlyn's Rainbow</title><link>https://wizmann.top/tags/metaprogramming/</link><description>Recent content in Metaprogramming on Maerlyn's Rainbow</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Wed, 26 Jul 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://wizmann.top/tags/metaprogramming/index.xml" rel="self" type="application/rss+xml"/><item><title>Metaprogramming in .NET 读书笔记 - 1</title><link>https://wizmann.top/posts/metaprogramming-in-dotnet-1/</link><pubDate>Wed, 26 Jul 2017 00:00:00 +0000</pubDate><guid>https://wizmann.top/posts/metaprogramming-in-dotnet-1/</guid><description>&lt;h2 id="什么是-metaprogramming-元编程">什么是 Metaprogramming (元编程)&lt;/h2>
&lt;p>&lt;img src="https://github.com/Wizmann/assets/raw/master/wizmann-pic/17-2-15/1418894-file_1487139497158_1868c.jpg" alt="">&lt;/p>
&lt;p>元编程从字面上理解就是“能处理程序的程序”。&lt;/p>
&lt;p>这里的“处理”，有两个意思。&lt;/p>
&lt;p>一是“编写”、“生成”，最经典例子就是编译器，它将我们的所编写的高级语言翻译成机器代码。编译器就像建筑工人，将“蓝图”（高级语言）转化成“高楼大厦”（机器语言）。还有一个我们经常用到的就是“宏”(Macro)。我们可以在代码中使用预先编写好的宏，在编译期，宏会被自动展开成相应的代码。这样的好处是用机器带替人类劳动。&lt;/p></description></item></channel></rss>