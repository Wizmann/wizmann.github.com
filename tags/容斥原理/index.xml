<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>容斥原理 on Maerlyn's Rainbow</title><link>https://wizmann.top/tags/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/</link><description>Recent content in 容斥原理 on Maerlyn's Rainbow</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sun, 14 Oct 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://wizmann.top/tags/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>容斥原理以及一些题目</title><link>https://wizmann.top/posts/inclusive-exclusive-principle/</link><pubDate>Sun, 14 Oct 2018 00:00:00 +0000</pubDate><guid>https://wizmann.top/posts/inclusive-exclusive-principle/</guid><description>&lt;h2 id="什么是容斥原理">什么是容斥原理&lt;/h2>
&lt;p>容斥原理是一种计数手段。例如在下图中，我们想&lt;strong>不重复、不遗漏&lt;/strong>的求出包含在ABC三个集合中所包含的元素的个数，应该使用怎么样的方法呢？&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wizmann/assets/master/blog/181007-Inclusion-exclusion-principle/500px-Inclusion-exclusion.svg.png" alt="image">&lt;/p>
&lt;p>&lt;img src="https://github.com/Wizmann/assets/raw/master/blog/181007-Inclusion-exclusion-principle/formula.PNG" alt="formula">&lt;/p>
&lt;p>这个问题对于我们来说并不陌生，当然也并不困难。直观的方法是把所有的元素计数，再把重复的元素排除出去。这种计数的方法，有“容”有“斥”，我们讲其称做“容斥原理”。&lt;/p></description></item></channel></rss>